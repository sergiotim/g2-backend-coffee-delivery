generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model Coffee {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Decimal  @db.Decimal(10, 2)
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relacionamentos incompleto
  // tags
  tags      CoffeeTag[]
  cartItems CartItem[]
}

model Tag {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos 
  coffees CoffeeTag[]
}

model CoffeeTag {
  coffeeId String
  tagId    String
  // Relacionamentos aqui

  coffee Coffee @relation(fields: [coffeeId], references: [id])
  tag    Tag    @relation(fields: [tagId], references: [id])

  @@id([coffeeId, tagId])
}

model Cart {
  id                String   @id @default(uuid())
  status            String  @default("Aguardando Pagamento")
  statusPayment     String @default("Pendente")
  dataTimeCompleted DateTime?
  userId            String? // Opcional para usuários não autenticados
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relacionamentos incompleto
  items CartItem[]
  // order Order?
}

model CartItem {
  id        String   @id @default(uuid())
  quantity  Int
  unitPrice Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos aqui
  cartId   String
  coffeeId String

  cart   Cart   @relation(fields: [cartId], references: [id])
  coffee Coffee @relation(fields: [coffeeId], references: [id])
}

// model Order{

// }
